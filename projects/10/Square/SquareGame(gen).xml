<class>
<keyword>class</keyword>
<defineclass>SquareGame</defineclass>
<symbol>{</symbol>
<classVarDec>
<keyword>field</keyword>
<identifier>Square</identifier>
<definefield0>square</definefield0>
<symbol>;</symbol>
</classVarDec>
<classVarDec>
<keyword>field</keyword>
<keyword>int</keyword>
<definefield1>direction</definefield1>
<symbol>;</symbol>
</classVarDec>
<subroutineDec>
<keyword>constructor</keyword>
<identifier>SquareGame</identifier>
<definesubroutine>new</definesubroutine>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usefield0>square</usefield0>
<symbol>=</symbol>
<expression>
<term>
<useclass>Square</useclass>
<symbol>.</symbol>
<usesubroutine>new</usesubroutine>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<integerConstant>0</integerConstant>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<integerConstant>0</integerConstant>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<integerConstant>30</integerConstant>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<usefield1>direction</usefield1>
<symbol>=</symbol>
<expression>
<term>
<integerConstant>0</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<returnStatement>
<keyword>return</keyword>
<expression>
<term>
<keyword>this</keyword>
</term>
</expression>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<definesubroutine>dispose</definesubroutine>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>dispose</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<useclass>Memory</useclass>
<symbol>.</symbol>
<usesubroutine>deAlloc</usesubroutine>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>this</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<definesubroutine>moveSquare</definesubroutine>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usefield1>direction</usefield1>
</term>
<symbol>=</symbol>
<term>
<integerConstant>1</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>moveUp</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usefield1>direction</usefield1>
</term>
<symbol>=</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>moveDown</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usefield1>direction</usefield1>
</term>
<symbol>=</symbol>
<term>
<integerConstant>3</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>moveLeft</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usefield1>direction</usefield1>
</term>
<symbol>=</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>moveRight</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<doStatement>
<keyword>do</keyword>
<useclass>Sys</useclass>
<symbol>.</symbol>
<usesubroutine>wait</usesubroutine>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<integerConstant>5</integerConstant>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<definesubroutine>run</definesubroutine>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>char</keyword>
<definevar0>key</definevar0>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>boolean</keyword>
<definevar1>exit</definevar1>
<symbol>;</symbol>
</varDec>
<statements>
<letStatement>
<keyword>let</keyword>
<usevar1>exit</usevar1>
<symbol>=</symbol>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<whileStatement>
<keyword>while</keyword>
<symbol>(</symbol>
<expression>
<term>
<symbol>~</symbol>
<term>
<usevar1>exit</usevar1>
</term>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<whileStatement>
<keyword>while</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>0</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usevar0>key</usevar0>
<symbol>=</symbol>
<expression>
<term>
<useclass>Keyboard</useclass>
<symbol>.</symbol>
<usesubroutine>keyPressed</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<usesubroutine>moveSquare</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</whileStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>81</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usevar1>exit</usevar1>
<symbol>=</symbol>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>90</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>decSize</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>88</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<usefield0>square</usefield0>
<symbol>.</symbol>
<usesubroutine>incSize</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>131</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usefield1>direction</usefield1>
<symbol>=</symbol>
<expression>
<term>
<integerConstant>1</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>133</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usefield1>direction</usefield1>
<symbol>=</symbol>
<expression>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>130</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usefield1>direction</usefield1>
<symbol>=</symbol>
<expression>
<term>
<integerConstant>3</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>132</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usefield1>direction</usefield1>
<symbol>=</symbol>
<expression>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
</statements>
<symbol>}</symbol>
</ifStatement>
<whileStatement>
<keyword>while</keyword>
<symbol>(</symbol>
<expression>
<term>
<symbol>~</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<usevar0>key</usevar0>
</term>
<symbol>=</symbol>
<term>
<integerConstant>0</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<usevar0>key</usevar0>
<symbol>=</symbol>
<expression>
<term>
<useclass>Keyboard</useclass>
<symbol>.</symbol>
<usesubroutine>keyPressed</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<usesubroutine>moveSquare</usesubroutine>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</whileStatement>
</statements>
<symbol>}</symbol>
</whileStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<symbol>}</symbol>
</class>
